service: aws-recognition-api

frameworkVersion: '3'

plugins:
  - serverless-python-requirements

provider:
  name: aws
  runtime: python3.8
  stage: mykola-stage
  region: us-east-1
  environment:
    TABLE_NAME: 'db-label-images'
    BUCKET: 's3-for-images'

  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - s3:*
          Resource: "arn:aws:s3:::${self:provider.environment.BUCKET}/*"
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
            - dynamodb:ListStreams
            - dynamodb:DescribeTable
          Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.TABLE_NAME}"
        - Effect: "Allow"
          Action:
            - "rekognition:*"
          Resource: "*"

functions:
  upload_object:
    handler: scripts/upload-object.createBlob
    events:
      - http:
          path: blobs
          method: post
          cors: true
      - stream:
          type: dynamodb
          batchSize: 1
          startingPosition: LATEST
          arn:
            Fn::GetAtt:
              - DynamoDBTable
              - StreamArn

  processBlob:
    handler: scripts/processBlob.labelOnS3Upload
    events:
      - s3:
          bucket: !Ref BucketUpload
          event: s3:ObjectCreated:*
          existing: true

  getLabelImages:
    handler: scripts/getLabelImages.getImagesByLabel
    events:
      - http:
          path: blobs/{blob_id}
          method: get
          cors: true

  test:
    handler: scripts/test.test
    events:
      - http:
          path: test
          method: post
          cors: true

resources:
  Resources:
    BucketUpload:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:provider.environment.BUCKET}

    DynamoDBTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.TABLE_NAME}
        AttributeDefinitions:
          - AttributeName: blob_id
            AttributeType: S
        KeySchema:
          - AttributeName: blob_id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        StreamSpecification:
          StreamViewType: NEW_IMAGE